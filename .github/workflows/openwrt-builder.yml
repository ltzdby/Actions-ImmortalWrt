#
# https://github.com/P3TERX/Actions-OpenWrt
#
# File: .github/workflows/openwrt-bulder.yml
# Description: Build OpenWrt using GitHub Actions
#
# Copyright (c) 2019-2024 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

name: OpenWrt Builder

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      branch:
        type: string
        description: 'Branch'
        required: true
        default: 'v23.05.3'
      upload_bin_dir:
        type: boolean
        description: 'Upload bin dir to artifact'
        required: true
        default: false
      upload_firmware:
        type: boolean
        description: 'Upload firmware to artifact'
        required: true
        default: true
      upload_release:
        type: boolean
        description: 'Upload to release'
        required: true
        default: false

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: ${{ inputs.branch }}
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: ${{ inputs.upload_bin_dir }}
  UPLOAD_FIRMWARE: ${{ inputs.upload_firmware }}
  UPLOAD_RELEASE: ${{ inputs.upload_release }}
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@v10
      with:
        root-reserve-mb: 4096
        swap-size-mb: 40960
        remove-dotnet: true
        remove-android: true
        remove-haskell: true
        remove-codeql: true
        remove-docker-images: true

    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d
        sudo -E apt-get update -y
        # sudo -E apt-get purge -y azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo -E apt-get autoremove -y --purge
        sudo -E apt-get clean
        sudo -E apt-get full-upgrade -y
        sudo -E apt-get install -y --no-install-recommends ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
        g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
        libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 \
        libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lld llvm lrzsz mkisofs msmtp \
        nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-ply \
        python3-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig \
        texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd
        sudo -E apt-get autoremove --purge
        sudo -E apt-get clean
        sudo timedatectl set-timezone "$TZ"

    - name: Clone source code
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download package
      id: package
      run: |
        cd openwrt
        ./scripts/diffconfig.sh > diffconfig
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        # find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || (echo "STATUS=failure" >> $GITHUB_ENV && exit 1)
        echo "STATUS=success" >> $GITHUB_ENV

    - name: Retry compiling the firmware
      id: retry
      if: env.STATUS != 'success'
      run: |
        cd openwrt
        make -j1 V=s || exit 1
        echo "STATUS=success" >> $GITHUB_ENV

    - name: Set build variables
      if: env.STATUS == 'success'
      run: |
        cd openwrt
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/CONFIG_TARGET_(.*)DEVICE_(.*)=y/\1\2/' > TARGET
        [ -s TARGET ] && echo "TARGET=$(cat TARGET)" >> $GITHUB_ENV
        echo "FILE_DATE=$(date -u +"%Y%m%dT%H%M%SZ")" >> $GITHUB_ENV
        cd bin/targets/*/*
        echo "VERSION=${{ env.REPO_BRANCH }}_$(cat version.buildinfo)" >> $GITHUB_ENV

    - name: Check space usage
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@v4
      if: env.STATUS == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: ImmortalWrt_bin_${{ env.VERSION }}_${{ env.TARGET }}_${{ env.FILE_DATE }}
        path: |
          openwrt/bin/*
          openwrt/diffconfig
        if-no-files-found: error

    - name: Delete packages folder, create symlink
      if: env.STATUS == 'success' && env.UPLOAD_FIRMWARE == 'true'
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        ln -s $PWD ../../../../images

    - name: Upload firmware directory
      uses: actions/upload-artifact@v4
      if: env.STATUS == 'success' && env.UPLOAD_FIRMWARE == 'true'
      with:
        name: ImmortalWrt_${{ env.VERSION }}_${{ env.TARGET }}_${{ env.FILE_DATE }}
        path: |
          openwrt/images
          openwrt/diffconfig
        if-no-files-found: error

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v2.0.8
      if: env.STATUS == 'success' && env.UPLOAD_RELEASE == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}_${{ env.FILE_DATE }}
        body: ${{ env.VERSION }}_${{ env.FILE_DATE }}
        files: |
          openwrt/images/*
          openwrt/diffconfig

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2.0.6
      with:
        retain_days: 0
        keep_minimum_runs: 5

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.3.4
      if: env.UPLOAD_RELEASE == 'true'
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
